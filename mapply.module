<?php
/**
 * @file
 * Provides a shortcode that is replaced by a Mapply store locator map.
 */

/**
 * Hook menu implementation.
 */
function mapply_menu() {
  $items = array();
  $items['admin/mapply'] = array(
    'title' => 'Mapply Settings',
    'description'       => 'Mapply Settings',
    'page callback'     => 'mapply_settings',
    'page arguments'    => array('mapply_form'),
    'access arguments'  => array('administer mapply'),
  );
  $items['admin/mapply/settings'] = array(
    'title'             => 'Mapply Settings',
    'description'       => 'Mapply Settings',
    'page callback'     => 'mapply_settings',
    'access arguments'  => array('administer mapply'),
    'type'              => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/mapply/configure'] = array(
    'title'             => 'Mapply Configuration',
    'description'       => 'Mapply Configuration',
    'page callback'     => 'mapply_configuration',
    'access arguments'  => array('administer mapply'),
    'type'              => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Page callback function required for the mapply configuration url.
 */
function mapply_configuration() {
  drupal_add_css(drupal_get_path('module', 'mapply') . '/css/mapply.css');
  return theme('mapply_configuration_template');
}

/**
 * Page callback function for the Mapply settings url.
 */
function mapply_settings() {
  drupal_add_css(drupal_get_path('module', 'mapply') . '/css/mapply.css');
  return theme('mapply_settings_template');
}

/**
 * Configures the form used by the settings page.
 */
function mapply_settings_form($form_state) {
  $form['mapply_api_key'] = array(
    '#type'           => 'textfield',
    '#title'          => 'Mapply API Key',
    '#size'           => 45,
    '#maxlength'      => 60,
    '#required'       => TRUE,
    '#default_value'  => variable_get('mapply_api_key'),
  );
  $form['mapply_google_api_key'] = array(
    '#type'           => 'textfield',
    '#title'          => 'Google API Key used for Mapply',
    '#size'           => 45,
    '#maxlength'      => 60,
    '#required'       => TRUE,
    '#default_value'  => variable_get('mapply_google_api_key'),
  );
  $form['mapply_display_powered_by'] = array(
    '#type'           => 'checkbox',
    '#title'          => 'Display Powered by message',
    '#default_value'  => variable_get('mapply_display_powered_by'),
  );
  $form['mapply_form_submit'] = array(
    '#type'   => 'submit',
    '#value'  => t('Save Settings'),
  );
  $form['#submit'] = array('mapply_form_submit');
  return $form;
}

/**
 * Permission hook implementation. Define the administer mapply permission which is required to see the admin pages for mapply.
 */
function mapply_permission() {
  return array(
    'administer mapply' => array(
      'title'       => t('Administer Mapply Settings'),
      'description' => t('Users with this permission will be able to administer the Mapply settings page'),
    ),
  );
}

/**
 * Hook form implementation.
 */
function mapply_form($form, &$form_state) {
  return drupal_get_form("mapply_settings_form");
}

/**
 * Handles form submission.
 *
 * @param array $form
 *   Form elements.
 * @param array $form_state
 *   State of the form.
 */
function mapply_form_submit(array $form, array &$form_state) {
  variable_set('mapply_api_key', $form_state['values']['mapply_api_key']);
  variable_set('mapply_google_api_key', $form_state['values']['mapply_google_api_key']);
  variable_set('mapply_display_powered_by', $form_state['values']['mapply_display_powered_by']);

  if (variable_get('mapply_display_powered_by') && variable_get('mapply_powered_by') == '') {
    mapply_update_powered_by_message();
  }
}

/**
 * Get the current 'powered by' message from the Mapply server and store it in a local variable for easy access.
 */
function mapply_update_powered_by_message() {
  $url = 'https://app.mapply.net/front-end/frontend_json.php?api_key=' . variable_get('mapply_api_key') . '&action=get_powered_by';
  $channel = curl_init($url);
  curl_setopt($channel, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($channel, CURLOPT_CONNECTTIMEOUT, 5);
  $data = curl_exec($channel);
  $data = json_decode($data);
  variable_set('mapply_powered_by', $data->powered_by);
}

/**
 * Implementation of shortcode_info() as setup by the Shortcode module.
 */
function mapply_shortcode_info() {
  $shortcodes['mapply'] = array(
    'title' => t('Mapply'),
    'description' => t('Replace the given text formatted like as a mapply.'),
    'process callback' => 'mapply_shortcode_mapply',
    'tips callback' => 'mapply_shortcode_mapply_tip',
  );
  return $shortcodes;
}

/**
 * Implements hook_theme().
 */
function mapply_theme() {
  return array(
    'shortcode_mapply' => array(
      'variables' => array(
        'mapply_api_key' => variable_get('mapply_api_key'),
        'google_api_key' => variable_get('google_api_key'),
        'class' => 'mapply',
      ),
    ),
    'mapply_configuration_template' => array(
      'template' => 'iframe',
    ),
    'mapply_settings_template' => array(
      'template' => 'settings',
    ),
  );
}

/**
 * Replace a given text with a Mapply a map.
 *
 * @param string $attrs
 *   Attributes from the shortcode.
 * @param $text
 *   Text is not used in this function.
 */
function mapply_shortcode_mapply($attrs, $text) {
  $attrs = shortcode_attrs(
    array(
      'class' => 'mapply',
    ),
    $attrs
  );

  $class = shortcode_add_class($attrs['class'], 'mapply');
  return theme('shortcode_mapply', array('class' => $class));
}

/**
 * Provide the replacement script for the mapply shortcode.
 *
 * @param array $vars
 */
function theme_shortcode_mapply(array $vars) {
  if (variable_get('mapply_api_key') == '' || variable_get('mapply_google_api_key') == '') {
    return t('Please setup your mapply api key and google api key');
  }
  else {
    $link = '';
    if (variable_get('mapply_display_powered_by')) {
      $link = variable_get('mapply_powered_by');
    }
    $str = '<script id=\'locator\' type=\'text/javascript\' src=\'https://app.mapply.net/front-end/js/locator.js\' data-path=\'//app.mapply.net/front-end/\' data-api-key=\'' . variable_get('mapply_api_key') . '\' data-maps-api-key=\'' . variable_get('mapply_google_api_key') . '\' ></script>' . $link;
    return $str;
  }
}

/**
 * Setup the text for the tip on how to use the mapply shortcode.
 *
 * @param object $format
 * The content format
 * @param bool $long
 */
function mapply_shortcode_mapply_tip($format, $long) {
  $output = array();
  $output[] = '<p><strong>' . t('[mapply/]') . '</strong> ';
  if ($long) {
    $output[] = t('Displays a Mapply map.') . '</p>';
  }
  else {
    $output[] = t('Displays a Mapply map on your site.  This map is loaded via JavaScript and so can be styled using the sites css.') . '</p>';
  }

  return implode(' ', $output);
}
